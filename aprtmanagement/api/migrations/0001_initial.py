# Generated by Django 4.0.3 on 2023-05-12 05:14

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='entrancetotheparkinglot',
            fields=[
                ('parking_log_number', models.BigAutoField(primary_key=True, serialize=False, verbose_name='parking_innumber')),
                ('carnumber', models.CharField(max_length=11, verbose_name='차량번호')),
                ('typeofentrysandexit', models.CharField(choices=[('입차', '입차'), ('출차', '출차')], max_length=3, verbose_name='입출차여부')),
                ('resident_dong', models.IntegerField(verbose_name='입주자사는동')),
                ('resident_ho', models.IntegerField(verbose_name='입주자사는호수')),
                ('entrydatetime', models.DateTimeField(null=True, unique=True, verbose_name='입차날짜시간')),
                ('exitdatetime', models.DateTimeField(null=True, unique=True, verbose_name='출차날짜시간')),
                ('person_check', models.CharField(max_length=30, verbose_name='차주상태')),
            ],
            options={
                'db_table': 'entrancetotheparkinglot',
                'ordering': ['parking_log_number'],
            },
        ),
        migrations.CreateModel(
            name='insidetheparkinglot',
            fields=[
                ('parking_seatnumber', models.BigAutoField(primary_key=True, serialize=False, verbose_name='parking_seatnumber')),
                ('parking_generalseat', models.CharField(choices=[('A-1', 'A-1'), ('B-1', 'B-1'), ('C-1', 'C-1')], max_length=6, unique=True, verbose_name='일반주차자리')),
                ('parking_evchargedseattstate', models.BooleanField(verbose_name='전기충전자리상태')),
                ('parking_seatstate', models.BooleanField(verbose_name='주차자리상태')),
                ('parking_seatcarnumber', models.CharField(blank=True, max_length=11, null=True, verbose_name='주차된차량번호')),
            ],
            options={
                'db_table': 'insidetheparkinglot',
                'ordering': ['parking_seatnumber'],
            },
        ),
        migrations.CreateModel(
            name='loginforAdministrator',
            fields=[
                ('loginforAdministrator_number', models.BigAutoField(primary_key=True, serialize=False, verbose_name='loginforAdministrator_number')),
                ('login_ID', models.CharField(max_length=20, verbose_name='ID')),
                ('login_PassWd', models.CharField(max_length=255, verbose_name='PASSWD')),
                ('email', models.CharField(max_length=100, verbose_name='E-mail')),
                ('session', models.CharField(blank=True, default=django.utils.timezone.now, max_length=255, null=True, verbose_name='session')),
            ],
            options={
                'db_table': 'loginforAdministrator',
                'ordering': ['loginforAdministrator_number'],
            },
        ),
        migrations.CreateModel(
            name='loginforClient',
            fields=[
                ('loginforClient_number', models.BigAutoField(primary_key=True, serialize=False, verbose_name='loginforClient_number')),
                ('login_ID', models.CharField(max_length=50, verbose_name='ID')),
                ('login_PassWd', models.CharField(max_length=15, verbose_name='PASSWD')),
            ],
            options={
                'db_table': 'loginforClient',
                'ordering': ['loginforClient_number'],
            },
        ),
        migrations.CreateModel(
            name='question',
            fields=[
                ('question_number', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Question_number')),
                ('subject', models.CharField(max_length=200, unique=True, verbose_name='제목')),
                ('content', models.CharField(max_length=1000, verbose_name='내용')),
                ('create_datetime', models.DateTimeField(max_length=100, verbose_name='작성한일시간')),
                ('modify_datetime', models.DateTimeField(blank=True, max_length=100, null=True, verbose_name='수정일시간')),
                ('creator', models.CharField(max_length=200, verbose_name='작성자')),
                ('etc', models.CharField(max_length=200, verbose_name='기타')),
            ],
            options={
                'db_table': 'question',
                'ordering': ['question_number'],
            },
        ),
        migrations.CreateModel(
            name='residents_information',
            fields=[
                ('residents_number', models.BigAutoField(primary_key=True, serialize=False, verbose_name='resident_number')),
                ('resident_name', models.CharField(max_length=10, verbose_name='입주자이름')),
                ('resident_dong', models.IntegerField(verbose_name='입주자사는동')),
                ('resident_ho', models.IntegerField(verbose_name='입주자사는호수')),
                ('residents_doorpasswd', models.IntegerField(unique=True, verbose_name='입주자현관문비밀번호')),
                ('resident_homephonenumber', models.CharField(blank=True, max_length=20, null=True, verbose_name='집전화번호')),
                ('resident_phone', models.CharField(max_length=20, unique=True, verbose_name='개인휴대전화번호')),
                ('resident_carnumber', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='차동자번호')),
                ('resident_typeofcar', models.CharField(choices=[('휘발유', '휘발유'), ('경유', '경유'), ('전기', '전기')], max_length=5, verbose_name='자동차의타입')),
                ('resident_residency', models.BooleanField(default=True, verbose_name='거주여부')),
                ('resident_movedate', models.DateField(blank=True, max_length=100, null=True, verbose_name='이사날짜')),
                ('login_PassWd', models.CharField(blank=True, max_length=20, null=True, verbose_name='PASSWD')),
            ],
            options={
                'db_table': 'residents_information',
                'ordering': ['residents_number'],
            },
        ),
        migrations.CreateModel(
            name='safetyaccident',
            fields=[
                ('safetyaccident_number', models.BigAutoField(primary_key=True, serialize=False, verbose_name='safetyaccident_number')),
                ('safetyaccident_datetime', models.DateTimeField(default=datetime.datetime(2023, 5, 12, 5, 14, 47, 674531, tzinfo=utc), verbose_name='안전사고발생날짜')),
                ('safetyaccident_kind', models.CharField(max_length=100, verbose_name='안전사고종류및기타내용')),
            ],
            options={
                'db_table': 'safetyaccident',
                'ordering': ['safetyaccident_number'],
            },
        ),
        migrations.CreateModel(
            name='unauthorized_parking',
            fields=[
                ('parking_log_number', models.BigAutoField(primary_key=True, serialize=False, verbose_name='parking_innumber')),
                ('unauthorized_carnumber', models.TextField(verbose_name='차량번호 사진')),
                ('unauthorized_carnumbers', models.TextField(verbose_name='비인가차량텍스트')),
                ('typeofentrysandexit', models.CharField(choices=[('입차', '입차'), ('출차', '출차')], max_length=3, verbose_name='입출차여부')),
                ('resident_dong', models.IntegerField(verbose_name='입주자사는동')),
                ('resident_ho', models.IntegerField(verbose_name='입주자사는호수')),
                ('residents_doorpasswd', models.IntegerField(verbose_name='입주자현관문비밀번호')),
                ('entrydatetime', models.DateTimeField(null=True, unique=True, verbose_name='입차날짜시간')),
                ('exitdatetime', models.DateTimeField(null=True, unique=True, verbose_name='출차날짜시간')),
            ],
            options={
                'db_table': 'unauthorized_parking',
                'ordering': ['parking_log_number'],
            },
        ),
        migrations.CreateModel(
            name='visitor_information',
            fields=[
                ('visitor_information_number', models.BigAutoField(primary_key=True, serialize=False, verbose_name='visitor_information_number ')),
                ('resident_dong', models.IntegerField(verbose_name='신청인 동')),
                ('resident_ho', models.IntegerField(verbose_name='신청인 호수')),
                ('visitor_information_datetime', models.DateField(max_length=30, verbose_name='방문자신청일')),
                ('visitor_information_date', models.DateField(max_length=30, verbose_name='방문자방문일')),
                ('visitor_information_carnumber', models.CharField(max_length=11, verbose_name='방문자차량번호')),
            ],
            options={
                'db_table': 'visitor_information',
                'ordering': ['visitor_information_number'],
            },
        ),
        migrations.CreateModel(
            name='answer',
            fields=[
                ('answer_number', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='answer_number')),
                ('content', models.CharField(max_length=1000, verbose_name='내용')),
                ('create_date', models.DateTimeField(verbose_name='작성일')),
                ('modify_date', models.DateTimeField(blank=True, null=True, verbose_name='작성한시간')),
                ('creator', models.CharField(max_length=200, verbose_name='작성자')),
                ('question_number', models.ForeignKey(db_column=' question_number', on_delete=django.db.models.deletion.CASCADE, to='api.question', verbose_name='질문번호')),
            ],
            options={
                'db_table': 'answer',
                'ordering': ['answer_number'],
            },
        ),
    ]
